#!/usr/bin/env bash

usage() {
  echo "Usage: $0 [OPTIONS]"
  echo "  -h, --help                  Print this help"
  echo "  -s, --script                Set script to use for tests"
  echo "  -d, --dir                   Set directory where the tests are located"
  echo "  -t, --task                  Use tests supplied in task"
}

FILES=()
DIRECTORY=
SCRIPT=
USE_TASK=

TOTAL=0
PASSED=0
FAILED=0

contains() {
  local e match="$1"
  shift
  for e; do [[ "$e" == "$match" ]] && return 0; done
  return 1
}

while [ "$#" -gt 0 ]; do
  case "$1" in
  -h | --help)
    usage
    exit 0
    ;;
  -s | --script)
    SCRIPT="$2"
    shift 2
    ;;
  -d | --dir)
    DIRECTORY="$2"
    shift 2
    ;;
  -t | --task)
    USE_TASK=1
    shift
    ;;
  *)
    echo "Unknown argument: $1"
    usage
    exit 1
    ;;
  esac
done

if [[ -n "$SCRIPT" ]] && ! [[ -s "$SCRIPT" ]]; then
  echo "Script not found: $SCRIPT"
  exit 1
fi

while IFS= read -r -d '' FILE
do
  FILES+=("$FILE")
done < <(find tests -name '*.txt' -print0)

for FILE in "${FILES[@]}"; do
  ((! USE_TASK)) && [[ "$FILE" =~ ^tests\/task_tests_.*.txt$ ]] && continue

  if [[ -n "$DIRECTORY" ]]; then
    FILE=$(echo "$FILE" | sed "s/tests\//$DIRECTORY\//g")
  fi

  if ! [[ -s "$FILE" ]]; then
    continue
  fi

  TOTAL=$((TOTAL + 1))

  cmd=$(head -n 1 "$FILE")
  if [[ -n "$SCRIPT" ]]; then
    cmd=$(echo "$cmd" | sed "s/\.\/corona/\.\/$SCRIPT/g")
  fi
  expected_output=$(sed 1d "$FILE")

  output=$(eval "$cmd")

  if [ "$output" != "$expected_output" ]; then
    FAILED=$((FAILED + 1))

    filename=$(basename -- "$FILE")
    filename="${filename%.*}"

    echo "Test failed: $FILE"
    diff -u -i <(echo "$output") <(echo "$expected_output") > "logs/$filename.diff"
    echo "Diff saved to logs/$filename.diff"
  else
    PASSED=$((PASSED + 1))

    echo "Test passed: $FILE"
  fi
done

echo "----------------------------------------"
echo "---------------STATISTICS---------------"
echo "----------------------------------------"
echo "Total: $TOTAL"
echo "Passed: $PASSED ($((PASSED * 100 / TOTAL))%)"
echo "Failed: $FAILED ($((FAILED * 100 / TOTAL))%)"
echo "----------------------------------------"